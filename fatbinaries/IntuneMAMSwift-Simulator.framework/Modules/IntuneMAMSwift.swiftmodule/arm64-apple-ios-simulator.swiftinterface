// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios12.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name IntuneMAMSwift
import Dispatch
import Foundation
import GroupActivities
@_exported import IntuneMAMSwift
import IntuneMAMSwiftStub
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _System_Foundation
@_hasMissingDesignatedInitializers public class IntuneMAMSwiftContextManager {
  public static func getScopedIdentity() -> Swift.String?
  public static func getScopedAccountId() -> Swift.String?
  public static func setIdentity(_ identity: Swift.String?, forScope scope: @escaping () -> Swift.Void)
  public static func setAccountId(_ accountId: Swift.String?, forScope scope: @escaping () -> Swift.Void)
  public static func setIdentity(_ identity: Swift.String?, forScope scope: @escaping () throws -> Swift.Void) throws
  public static func setAccountId(_ accountId: Swift.String?, forScope scope: @escaping () throws -> Swift.Void) throws
  
  #if compiler(>=5.3) && $AsyncAwait
  @available(iOS 15.0, *)
  public static func setIdentity(_ identity: Swift.String?, forScope scope: @escaping () async -> Swift.Void) async
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  @available(iOS 15.0, *)
  public static func setAccountId(_ accountId: Swift.String?, forScope scope: @escaping () async -> Swift.Void) async
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  @available(iOS 15.0, *)
  public static func setIdentity(_ identity: Swift.String?, forScope scope: @escaping () async throws -> Swift.Void) async throws
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  @available(iOS 15.0, *)
  public static func setAccountId(_ accountId: Swift.String?, forScope scope: @escaping () async throws -> Swift.Void) async throws
  #endif

  @objc deinit
}
